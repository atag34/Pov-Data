#store all pages in a list first
baseurl <- "https://projects.propublica.org/nonprofits/api/v1/search.json?order=revenue&sort_order=desc"
pages <- list()
for(i in 0:10){
mydata <- fromJSON(paste0(baseurl, "&page=", i), flatten=TRUE)
message("Retrieving page ", i)
pages[[i+1]] <- mydata$filings
}
#combine all into one
filings <- rbind.pages(pages)
#check output
nrow(filings)
#store all pages in a list first
baseurl <- "https://projects.propublica.org/nonprofits/api/v1/search.json?order=revenue&sort_order=desc"
pages <- list()
for(i in 0:10){
mydata <- fromJSON(paste0(baseurl, "&page=", i), flatten=TRUE)
print(assets)
#store all pages in a list first
baseurl <- "https://projects.propublica.org/nonprofits/api/v1/search.json?order=revenue&sort_order=desc"
pages <- list()
for(i in 0:10){
mydata <- fromJSON(paste0(baseurl, "&page=", i), flatten=TRUE)
message("Retrieving page ", i)
pages[[i+1]] <- mydata$filings
#store all pages in a list first
baseurl <- "https://projects.propublica.org/nonprofits/api/v1/search.json?order=revenue&sort_order=desc"
pages <- list()
for(i in 0:10000){
mydata <- fromJSON(paste0(baseurl, "&page=", i), flatten=TRUE)
message("Retrieving page ", i)
pages[[i+1]] <- mydata$filings
nrow(assets)
#store all pages in a list first
baseurl <- "https://projects.propublica.org/nonprofits/api/v1/search.json?order=revenue&sort_order=desc"
pages <- list()
for(i in 0:10){
mydata <- fromJSON(paste0(baseurl, "&page=", i), flatten=TRUE)
message("Retrieving page ", i)
pages[[i+1]] <- mydata$filings
}
filings[1:10, c("organization.sub_name", "organization.city", "totrevenue")]
filings[1:10, c("organization.sub_name", "organization.city", "totrevenue")]
#store all pages in a list first
baseurl <- "https://projects.propublica.org/nonprofits/api/v1/search.json?order=revenue&sort_order=desc"
pages <- list()
for(i in 0:10){
mydata <- fromJSON(paste0(baseurl, "&page=", i), flatten=TRUE)
message("Retrieving page ", i)
pages[[i+1]] <- mydata$filings
}
#combine all into one
filings <- rbind.pages(pages)
#check output
nrow(filings)
filings[1:10, c("organization.sub_name", "organization.city", "totrevenue")]
library(jsonlite)
library(RPublica)
str(np_search('The F.B. Heron Foundation'))
str(np_search('The F.B. Heron Foundation', subsection = '$ tax_prd=2014))
str(np_search('The F.B. Heron Foundation', subsection = '$ tax_prd=2014))
data <- str(np_search('The F.B. Heron FOundation'))
data <- str(np_search('Enterprise Community Partners, Inc.'))
data <- str(np_search('Enterprise Community Investment Inc'))
data <- dataframe(data)
data <- dataframe(data)
data <- dataframe('data')
data <- data.frame(data)
data <- data.frame(str(np_search('Enterprise Community Investment Inc'))
data <- data.frame(str(np_search('Enterprise Community Investment Inc'))
data <- data.frame(str(np_search('Enterprise Community Investment Inc'))
data <- data.frame(str(np_search('Enterprise Community Investment Inc'))
data <- data.frame(str(np_search('Enterprise Community Investment Inc'))
data
data print
data <- str(np_search('The F.B. Heron FOundation'))
str(np_search('Enterprise Community Investment Inc'))
str(np_search('Enterprise Community Investment Inc'))[[2]]
str(np_search('Enterprise Community Investment Inc'))[[4]]
load("C:/Users/atagliente/Desktop/ProgrammingAssignment2-master/UCI HAR Dataset/.RData")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
fileurl <- "https://s3.amazonaws.com/coursera-uploads/peer-review/HkJsxW0yEeWEewoyD2Bc5Q/00b5512a8d6b1bc66a0a5fe313ac6a9e/TidyData.txt"
download.file(fileurl, "./tidydata.txt")
data <- read.table("./tidydata.txt", header = True)
data <- read.table("./tidydata.txt", header = TRUE)
library(swirl)
swirl()
end()
swirl()
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
letters
sample(LETTERS)
flips <- sample(0:1,100, replace = TRUE, prob = c(0.3,0.7))
flips <- sample(c(0,1),100, replace = TRUE, prob = c(0.3,0.7))
view(flips)
View(flips)
flips
sum0
sum(1,flips)
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinoms(100, size = 1, prob - 0.7)
flips2 <- rbinom(100, size = 1, prob - 0.7)
flips2 <- rbinom(100,1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,100,25)
rpois(5, mean = 10)
rpois(5,10)
my_pois <- replicate(100, rpois(5,10))
my_pois
colMeans(my_pois)
cm <- colMeans(my_pois)
cm
hist(cm)
esc
exit
swirl()
rm(list=ls())
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(cars)
?plot
plot(cars, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = Stopping Distance)
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
?plot
plot(cars, sub = "My Plot Subtitle")
plot(cars, col - 2)
plot(cars, col = 2)
plot(cars, xlim = c(10,15))
plot(cars, pch = 2)
install.packages
install.packages("rgeolocate")
library(rgeolocate)
?rgeolocate
rgeolocate::ip_api(169.254.241.162)
rgeolocate::ip_api("169.254.241.162",)
rgeolocate::ip_api("169.254.241.162")
df <- read.table(gzfile("C:/Users/atagliente/Downloads/worldcitiespop.txt.gz"))
View(df)
str(df)
df <- read.table(gzfile("C:/Users/atagliente/Downloads/worldcitiespop.txt.gz"), header = TRUE)
View(df)
df <- read.table(gzfile("C:/Users/atagliente/Downloads/worldcitiespop.txt.gz"), header = TRUE, sep = ".")
df <- read.table(gzfile("C:/Users/atagliente/Downloads/worldcitiespop.txt.gz"), sep = ".")
df <- read.table(gzfile("C:/Users/atagliente/Downloads/worldcitiespop.txt.gz"), sep = ".")
setwd("C:/Users/atagliente/Documents/GitHub/Pov Data")
library(xlsx)
library(xlsxjars)
install.packages("xlsx")
library(xlsx)
fips <- read.csv("./fips_codes_website.csv", header = TRUE)
heaad(fips)
head(fips)
fips <- subset.data.frame(fips, select = fips[,c(1,4,5)]
fips <- subset.data.frame(fips, select = fips[,c(1,4,5)])
table(unique(fips))
str(fips)
unique(fips$FIPS.Entity.Code)
table(unique(fips$FIPS.Entity.Code)
table(unique(fips$FIPS.Entity.Code))
duplicated(fips) | duplicated(fips, fromLast = TRUE)
duplicated(fips$State.FIPS.Code) | duplicated(fips$State.FIPS.Code, fromLast = TRUE)
duplicated(fips$County.FIPS.Code) | duplicated(fips$County.FIPS.Code, fromLast = TRUE)
df <- table(duplicated(fips$FIPS.Entity.Code) | duplicated(fips$FIPS.Entity.Code, fromLast = TRUE))
df
df <- table(duplicated(fips$County.FIPS.Code) | duplicated(fips$County.FIPS.Code, fromLast = TRUE))
df
